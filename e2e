#!/bin/bash

CHORUS_INTERPRETER_DIR="./chorus-interpreter"
FEATURES_DIR="./features"
WEBPACK_DEV_SERVER_PORT=9999


info () {
	yellow=`tput setaf 3`
	reset=`tput sgr0`
	echo "${yellow}‣ $1${reset}"
}

success () {
	green=`tput setaf 2`
	reset=`tput sgr0`
	echo "${green}✓ $1${reset}"
}

error () {
	red=`tput setaf 1`
	reset=`tput sgr0`
	echo "${red}✗ $1${reset}"
}

show_error_and_exit () {
	error "$1"
	exit $2
}

exit_if_non_zero () {
	if [ $1 -ne 0 ]; then
		show_error_and_exit "$2" $1
	fi
}

kill_webpack_dev_server () {
	if [ ! -z "$WEBPACK_DEV_SERVER_PID" ]; then
		echo "Killing npm webpack-dev-server parent using pid $WEBPACK_DEV_SERVER_PID"
		kill -SIGINT $WEBPACK_DEV_SERVER_PID
		sleep 1

		if [ $? -ne 0 ] ; then
			echo "Failed to kill webpack-dev-server"
		else
			echo "Killed webpack-dev-server"
		fi
	fi

	PID=$(lsof -ti :$WEBPACK_DEV_SERVER_PORT)
	if [ ! -z "$PID" ]; then
	    echo "Killing npm webpack server using pid $PID"
		kill -SIGINT $PID
	fi
	return 0
}


if [ ! -d "$CHORUS_INTERPRETER_DIR" ]; then
	info "Installing latest version of the Chorus interpreter..."

	# get HTML page content
	HTML=$(curl -L -s http://github.com/nickebbutt/Chorus/releases/latest)
	exit_if_non_zero $? "Could not find Chorus interpreter latest release HTML page!"

	# find the wanted <a> tag
	TAR_A_TAG=$(echo "$HTML" | grep -s -E 'href="(.*chorus.*\.tar)')
	exit_if_non_zero $? "Could not find Chorus interpreter release link tag!"

	# extract href value
	TAR_RELATIVE_LINK=$(awk -F\" '{print $2}' <<< $TAR_A_TAG)
	exit_if_non_zero $? "Could not extract Chorus interpreter TAR link!"

	# build absolute url for tar file
	TAR_URL="http://github.com$TAR_RELATIVE_LINK"

	# download and untar
	rm -rf "$CHORUS_INTERPRETER_DIR"
	mkdir "$CHORUS_INTERPRETER_DIR"
	curl -L $TAR_URL | tar -x -C "$CHORUS_INTERPRETER_DIR" --strip-components=1
	exit_if_non_zero $? "Could not download latest version of the Chorus interpreter!"
else
	info "Using already installed version of the Chorus interpreter..."
fi

CHROME_DRIVER_PATH=$(which chromedriver)
exit_if_non_zero $? "Could not find chromedriver executable"
echo "Using chromedriver at ${CHROME_DRIVER_PATH}"

if [ "$TRAVIS" ]; then
	CHROME_PATH=$(which google-chrome)
	exit_if_non_zero $? "Could not find google-chrome executable"
	echo "Using google-chrome at ${CHROME_PATH}"
fi

info "Starting JS client..."
yarn start &
WEBPACK_DEV_SERVER_PID=$!
echo "webpack-dev-server pid is $WEBPACK_DEV_SERVER_PID"

# Kill webpack-dev-server (was running because of `npm start`)
trap kill_webpack_dev_server SIGINT SIGTERM EXIT

info "Executing chorus tests..."

chorus -f ${FEATURES_DIR}
EXIT_CODE=$?

if [ ${EXIT_CODE} -ne 0 ] ; then
  echo "Failures occurred in Chorus tests"
  exit 1
else
  echo "Chorus Tests all passed!"
  exit 0
fi


